name: LCT-CI

on:
    push:
        branches:
            - main

concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build-and-deploy:
        runs-on: self-hosted

        steps:
            - name: Messaging
              run: |
                  curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
                  -d "chat_id=${{ secrets.TG_CHANNEL }}" \
                  -d "text=🚀Starts deploy BACK-END!"

            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: main

            - name: Deploy app
              run: |
                  docker compose down || true
                  docker compose --env-file .env up -d --build

            - name: Clean up
              run: |
                  docker image prune -f
                  find . -mindepth 1 -not -path "./.git*" -exec rm -rf {} +

            - name: Send success notification to Telegram
              if: success()
              run: |
                  COMMIT_MESSAGE=$(git log -1 --pretty=%B)
                  curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
                  -d "chat_id=${{ secrets.TG_CHANNEL }}" \
                  -d "text=✅ Build and deploy successful! 🚀%0ABranch: $GITHUB_REF%0ACommit: $COMMIT_MESSAGE"

            - name: Send failure notification to Telegram
              if: failure()
              run: |
                  ERROR_LOG=$(docker logs cf_server 2>&1 | tail -n 50)
                  curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
                  -d "chat_id=${{ secrets.TG_CHANNEL }}" \
                  -d "text=❌ Build failed! 😞%0AError log:%0A\`\`\`%0A$ERROR_LOG%0A\`\`\`" \
                  -d "parse_mode=MarkdownV2"
